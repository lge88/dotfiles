#!/usr/bin/env node
var _ = require('underscore');
var program = require('commander');
var spawn = require('child_process').spawn;
var exec = require('child_process').exec;
var path = require('path');
var join = path.join;
var fs = require('fs');
var exists = fs.existsSync;
var platform = require('os').platform();

var Table = require('cli-table');
var table = new Table({
  head : ['name', 'link']
});
table.push(
  ['regex', 'file://' + path.resolve(__dirname, '../ref/regex.pdf')],
  ['gmsh', 'file://' + path.resolve(__dirname, '../ref/gmsh.pdf')],
  ['backbone', 'http://backbonejs.org'],
  ['underscore', 'http://underscorejs.org'],
  ['node', 'http://nodejs.org/api/all.html'],
  ['three.js', 'http://mrdoob.github.com/three.js/docs/57'],
  ['express', 'https://github.com/visionmedia/express'],
  ['jquery', 'http://api.jquery.com'],
  ['fabric.js', 'http://fabricjs.com/docs'],
  ['hub', 'http://defunkt.io/hub'],
  ['ios', 'https://developer.apple.com/library/ios/navigation'],
  ['component', 'https://github.com/component/component/wiki/Spec'],
  ['vuforia', 'https://developer.vuforia.com/resources/api/index'],
  ['commander', 'http://visionmedia.github.com/commander.js'],
  ['npm', 'https://npmjs.org/doc/json.html'],
  ['bootstrap', 'http://twitter.github.com/bootstrap/components.html'],
  ['beam', 'file://' + path.resolve(__dirname, '../ref/BeamFormulas.pdf')],
  ['c', 'http://en.wikibooks.org/wiki/C_Programming/Reference_Tables'],
  ['shader', 'http://www.khronos.org/opengles/sdk/docs/manglsl'],
  ['opengl', 'http://www.khronos.org/opengles/sdk/docs/man'],
  ['connect', 'https://github.com/senchalabs/connect'],
  ['css-colors', 'http://www.w3schools.com/cssref/css_colornames.asp'],
  ['mongoose', 'http://mongoosejs.com/docs/api.html']
  // ['NSDictionary', 'http://stackoverflow.com/questions/1760371/how-can-we-store-into-an-nsdictionary-what-is-the-difference-between-nsdictiona']
);

program
  .version('0.0.1')
  .option('-l, --list', 'List available cheating sheets')
  .usage('<cheating sheet> [options]');

program.on('--help', function(){
  console.log('Available cheat sheets:');
  console.log(table.toString());
  console.log();
  process.exit();
});

program.parse(process.argv);
var args = process.argv.slice(3);
var cmd = program.args[0];

if (program.list) {
  console.log(_.map(table, function(it) {
    return it[0];
  }).join('\n'));
  process.exit();
}

if (!cmd) {
  program.emit('--help');
  process.exit();
}

var bin = join(__dirname, 'cheat-sub/' + cmd);
if (exists(bin)) {
  spawn(bin, args, { stdio: 'inherit' });
} else {
  var link = _.find(table, function(it) {
    return it[0] == cmd;
  });

  if (link) {
    link = link[1];
    if (platform == 'linux') {
      spawn('gnome-open', [link]);
      process.exit();
    }
  } else {
    console.log('Can not find cheat sheet ' + cmd);
    process.exit();
  }
}     
