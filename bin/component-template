#! /usr/bin/env node

require( 'shelljs/global' );
var path = require('path');
var rl = require( 'readline' ).createInterface( {
  input: process.stdin,
  output: process.stdout
} );

if ( process.argv.length < 3  ) {
  echo( 'Usage: component-template templatePath [destinationPath]' );
  exit( 1 );
}

var tmplName = process.argv[2] ? ( 'component-' + process.argv[2] ) : 'component-lib';
var dir = process.argv[3] || 'demo-' + now().join( '-' );
var pkgName = dir;
var tmplBaseDir = path.resolve( __dirname, '../.templates' );
var tmplDir = path.resolve( tmplBaseDir, tmplName );

if ( !test( '-d', tmplDir ) ) {
  echo( 'Can\'t not find template named ' + tmplName );
  echo( 'It is supposed to be at ' + tmplDir );
  exit( 1 );
}

if ( test( '-e', dir ) ) {
  rl.question( dir + ' is already there, Override? [y/N]', function( ans ) {
    if ( ans === 'y' ) {
      doit();
    } else {
      echo( 'Abort.' );
      exit();
    }
  } );
} else {
  doit();
}

function doit() {
  echo( 'Copy template files from ' + tmplDir );
  mkdir( '-p', dir );
  cd( dir );
  cp( '-fr', tmplDir + '/*', './' );
  cp( '-fr', tmplDir + '/.gitignore', './' );
  echo( 'Files are copied to ' + dir );

  var savedDir = pwd();

  if ( test( '-d', '_init' ) ) {
    echo( 'Run scripts under ' + dir +'_init folder' );

    var tasks = [];
    cd( '_init' );
    ls( '.' ).forEach( function( f ) {
      try {
        var task = require( path.resolve( f ) );
      } catch( err ) {
        console.log( err );
      }

      if ( typeof task.execute === 'function' ) {
        task.priority || ( task.priority = 0 );
        tasks.push( task );
      }
    } );

    tasks
      .sort( function( a, b ) { return a.order - b.order; } )
      .forEach( function( t ) {
        cd( savedDir );
        t.execute();
        cd( savedDir );
      } );

    echo( 'Remove _init folder' );
    rm( '-r', './_init' );

    cd( savedDir );
  }

  echo( 'Done!' );
  exit();
}

function now() {
  var d = new Date();
  var year = d.getFullYear();
  var month = 1 + d.getMonth();
  month = ( '0' + month ).slice( -2 );
  var day = d.getDate();
  day = ( '0' + day ).slice( -2 );
  var hour = d.getHours();
  hour = ( '0' + hour ).slice( -2 );
  var mins = d.getMinutes();
  mins = ( '0' + mins ).slice( -2 );
  var secs = d.getSeconds();
  secs = ( '0' + secs ).slice( -2 );
  return [ year, month, day, hour, mins, secs ];
}
